entry_type: Object
imports:
  h1/tags/common:
    - Point3D
    - TagDependency
    - Index
    - Block
    - TagString
    - FunctionOut
    - FunctionNameNullable
    - FunctionScaleBy
    - WaveFunction
    - Fraction
    - FunctionType
    - FunctionBoundsMode
    - ColorInterpolationFlags
    - ColorRGB
    - PredictedResource
type_defs:
  ObjectType:
    class: enum
    size: 2
    options:
      - name: biped
      - name: vehicle
      - name: weapon
      - name: equipment
      - name: garbage
      - name: projectile
      - name: scenery
      - name: device_machine
      - name: device_control
      - name: device_light_fixture
      - name: placeholder
      - name: sound_scenery
  ObjectFlags:
    class: bitfield
    size: 2
    bits:
      - name: does_not_cast_shadow
        comments:
          en: Prevents this object from casting dynamic shadows. Does not apply to scenery, which cast shadows in lightmaps using their collision model.
      - name: transparent_self_occlusion
      - name: brighter_than_it_should_be
        comments:
          en: >
            Causes the object to have extra ambient lighting so it's easier to
            see in dark spaces. This is used for items which are important to
            gameplay like weapons and powerups.
      - name: not_a_pathfinding_obstacle
      - name: extension_of_parent
        meta:
          h1a_only: true
          unused: true
        comments:
          en: >
            Planned H2 backport, currently unused. In H2 this is documented as
            "passes all function values to parent and uses parent's markers".
      - name: cast_shadow_by_default
        meta:
          h1a_only: true
        comments:
          en: >
            Forces static objects like scenery to have dynamic shadows,
            unless _does not cast shadow_ is also set. This flag does not
            prevent such objects from also casting lightmapped shadows, so it is
            best used for objects which have been added to a map after baking
            like scenery which is scripted to appear.
      - name: does_not_have_remastered_geometry
        meta:
          h1a_only: true
        comments:
          en: >
            The object does not appear in anniversary/remastered graphics mode.
            Used for campaign moas.
  ObjectFunctionIn:
    class: enum
    size: 2
    options:
      - name: none
      - name: body_vitality
      - name: shield_vitality
      - name: recent_body_damage
      - name: recent_shield_damage
      - name: random_constant
      - name: umbrella_shield_vitality
      - name: shield_stun
      - name: recent_umbrella_shield_vitality
      - name: umbrella_shield_stun
      - name: region
      - name: region_1
      - name: region_2
      - name: region_3
      - name: region_4
      - name: region_5
      - name: region_6
      - name: region_7
      - name: alive
      - name: compass
  ObjectAttachment:
    class: struct
    assert_size: 72
    fields:
      - name: type
        type: TagDependency
        meta:
          tag_classes:
            - light
            - light_volume
            - contrail
            - particle_system
            - effect
            - sound_looping
      - name: marker
        type: TagString
      - name: primary_scale
        type: FunctionOut
      - name: secondary_scale
        type: FunctionOut
      - name: change_color
        type: FunctionNameNullable
      - type: pad
        size: 2
      - type: pad
        size: 16
  ObjectWidget:
    class: struct
    assert_size: 32
    fields:
      - name: reference
        type: TagDependency
        meta:
          tag_classes:
            - antenna
            - glow
            - light_volume
            - lightning
            - flag
      - type: pad
        size: 16
  ObjectFunctionFlags:
    class: bitfield
    size: 4
    bits:
      - name: invert
      - name: additive
      - name: always_active
  ObjectFunction:
    class: struct
    assert_size: 360
    meta:
      pre_compile: true
    fields:
      - name: flags
        type: ObjectFunctionFlags
      - name: period
        type: float
        meta:
          unit: seconds
          default: 1
      - name: scale_period_by
        type: FunctionScaleBy
      - name: function
        type: WaveFunction
      - name: scale_function_by
        type: FunctionScaleBy
      - name: wobble_function
        type: WaveFunction
      - name: wobble_period
        type: float
        meta:
          unit: seconds
      - name: wobble_magnitude
        type: float
        meta:
          unit: percent
      - name: square_wave_threshold
        type: Fraction
      - name: step_count
        type: uint16
      - name: map_to
        type: FunctionType
      - name: sawtooth_count
        type: uint16
      - name: add
        type: FunctionScaleBy
      - name: scale_result_by
        type: FunctionScaleBy
      - name: bounds_mode
        type: FunctionBoundsMode
      - name: bounds
        type: Bounds
        meta:
          default:
            - 0
            - 1
        type_args:
          T: Fraction
      - type: pad
        size: 4
      - type: pad
        size: 2
      - name: turn_off_with
        type: int16
      - name: scale_by
        type: float
      - type: pad
        size: 252
      - name: inverse_bounds
        type: float
        meta:
          cache_only: true
        endianness: little
      - name: inverse_sawtooth
        type: float
        meta:
          cache_only: true
        endianness: little
      - name: inverse_step
        type: float
        meta:
          cache_only: true
        endianness: little
      - name: inverse_period
        type: float
        meta:
          cache_only: true
        endianness: little
      - name: usage
        type: TagString
  ObjectChangeColorsPermutation:
    class: struct
    assert_size: 28
    fields:
      - name: weight
        type: float
        meta:
          default: 1
      - name: color_lower_bound
        type: ColorRGB
      - name: color_upper_bound
        type: ColorRGB
  ObjectChangeColors:
    class: struct
    assert_size: 44
    meta:
      post_cache_deformat: true
      postprocess_hek_data: true
      pre_compile: true
    fields:
      - name: darken_by
        type: FunctionScaleBy
      - name: scale_by
        type: FunctionScaleBy
      - name: flags
        type: ColorInterpolationFlags
      - name: color_lower_bound
        type: ColorRGB
      - name: color_upper_bound
        type: ColorRGB
      - name: permutations
        type: Block
        type_args:
          T: ObjectChangeColorsPermutation
        meta:
          hek_max_count: 8
  Object:
    class: struct
    assert_size: 380
    fields:
      - name: object_type
        type: ObjectType
        meta:
          volatile: true
          hidden: true
        endianness: little
      - name: flags
        type: ObjectFlags
      - name: bounding_radius
        type: float
        meta:
          unit: world units
        comments:
          en: |-
            The bounding radius sets the approximate maximum size of the object
            and is used for _at least_ the following optimizations by the game:

            * Culling objects for rendering which are not partially on screen or [visible through portals](~scripting#external-globals-debug-no-frustum-clip).
            * Setting the shadow map size for [dynamic object shadows](~object#shadows-and-lighting).
            * Selecting an appropriate [LOD](~gbxmodel#level-of-detail).
            * Skipping [collision](~model_collision_geometry) checks.
            * Determining if spawn points are blocked by an object.

            The radius should contain this object completely, but not be too large
            or else the object will draw unccessarily when off-screen and block
            spawn points. Setting it too low will cause the object to have clipped
            shadows, pop in and out of visibility at the edges of the screen, and
            have inconsistent collision with other objects.

            The bounding radius can be visualized in Sapien or Standalone using
            [debug_objects_bounding_spheres](~developer-console#debugfunctions-debug-objects-bounding-spheres).
      - name: bounding_offset
        type: Point3D
      - name: origin_offset
        type: Point3D
      - name: acceleration_scale
        type: float
        meta:
          min: 0
      - name: scales_change_colors
        type: uint32
        meta:
          cache_only: true
        endianness: little
      - name: model
        type: TagDependency
        meta:
          tag_classes:
            - gbxmodel
            - model
      - name: animation_graph
        type: TagDependency
        meta:
          tag_classes:
            - model_animations
      - type: pad
        size: 40
      - name: collision_model
        type: TagDependency
        meta:
          tag_classes:
            - model_collision_geometry
      - name: physics
        type: TagDependency
        meta:
          tag_classes:
            - physics
      - name: modifier_shader
        type: TagDependency
        meta:
          tag_classes:
            - shader
      - name: creation_effect
        type: TagDependency
        meta:
          tag_classes:
            - effect
      - type: pad
        size: 84
      - name: render_bounding_radius
        type: float
        meta:
          unit: world units
      - name: a_in
        type: ObjectFunctionIn
      - name: b_in
        type: ObjectFunctionIn
      - name: c_in
        type: ObjectFunctionIn
      - name: d_in
        type: ObjectFunctionIn
      - type: pad
        size: 44
      - name: hud_text_message_index
        type: Index
      - name: forced_shader_permutation_index
        type: Index
      - name: attachments
        type: Block
        type_args:
          T: ObjectAttachment
        meta:
          hek_max_count: 8
      - name: widgets
        type: Block
        type_args:
          T: ObjectWidget
        meta:
          hek_max_count: 4
      - name: functions
        type: Block
        type_args:
          T: ObjectFunction
        meta:
          hek_max_count: 4
          max: 4
      - name: change_colors
        type: Block
        type_args:
          T: ObjectChangeColors
        meta:
          hek_max_count: 4
          max: 4
      - name: predicted_resources
        type: Block
        type_args:
          T: PredictedResource
        meta:
          hek_max_count: 1024
          cache_only: true
  BasicObject:
    class: struct
    extends:
      type: Object
    assert_size: 508
    fields:
      - type: pad
        size: 128
  ObjectNoise:
    class: enum
    size: 2
    options:
      - name: silent
      - name: medium
      - name: loud
      - name: shout
      - name: quiet
